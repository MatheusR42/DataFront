"use strict";Vue.component("binomial-calculator",{template:'\n        <section class="section">\n            <div class="columns is-desktop">\n                <div class="column" >\n                    <div class="field">\n                        <label class="label">Probability of success in a single event</label>\n                        <div class="control">\n                            <input class="input" type="text"name="eventProbability"  v-model="eventProbability"  >\n                        </div>\n                        <p class="help is-danger" v-if="errors.has( \'eventProbability\' )" v-text="errors.get( \'eventProbability\' )"></p>\n                    </div>\n                    \n                    <div class="field">\n                        <label class="label">Number of trials</label>\n                        <div class="control">\n                            <input class="input" type="text"name="numberOfTrials"  v-model="numberOfTrials">\n                            <p class="help is-danger" v-if="errors.has( \'numberOfTrials\' )" v-text="errors.get( \'numberOfTrials\' )"></p>\n                        </div>\n                    </div>\n                    <div class="field">\n                        <label class="label">Number of success</label>\n                        <div class="control">\n                            <input class="input" type="text"name="numberOfSuccess"   v-model="numberOfSuccess">\n                            <p class="help is-danger" v-if="errors.has( \'numberOfSuccess\' )"" v-text="errors.get( \'numberOfSuccess\' )"></p>\n                        </div>\n                    </div>\n\n                    <div class="field is-grouped">\n                        <div class="control">\n                            <button class="button is-link" @click="reset">Reset!</button>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="column">\n                    <div class="content">\n                        <h5>Results</h5>\n                        <table class="table is-bordered is-striped is-narrow">\n                            <thead>\n                                <tr>\n                                    <th colspan="2">X ~ Bin({{this.numberOfSuccess | round }}, {{this.eventProbability | round }})</th>\n                                </tr>\n                            </thead> \n                            <tbody>\n                                <tr>\n                                        <td>P(X <  {{this.numberOfSuccess | round }})</td>\n                                        <td>{{this.binomialProbabilities.less | round }}</td>\n                                </tr>\n                                <tr>\n                                        <td>P(X <=  {{this.numberOfSuccess | round }})</td>\n                                        <td>{{this.binomialProbabilities.lessOrEqual | round }}</td>\n                                </tr>\n                                <tr>\n                                        <td>P(X = {{this.numberOfSuccess | round }})</td>\n                                        <td>{{this.binomialProbabilities.equal | round }}</td>\n                                </tr>\n                                <tr>\n                                        <td>P(X >  {{this.numberOfSuccess | round }})</td>\n                                        <td>{{this.binomialProbabilities.greater | round }}</td>\n                                </tr>\n                                <tr>\n                                        <td>P(X >=  {{this.numberOfSuccess | round }})</td>\n                                        <td>{{this.binomialProbabilities.greaterOrEqual | round }}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n                </div>\n                \n                <chart-vue :labels="chartData.labels" :values="chartData.values" title="Probability Mass Function" type="bar"></chart-vue>\n        </section>\n    ',data:function(){return{chartData:{labels:[],values:[]},eventProbability:.3,numberOfTrials:100,numberOfSuccess:35,binomialProbabilities:{equal:0,greater:0,less:0,lessOrEqual:0,greaterOrEqual:0},errors:new FormErrors}},watch:{eventProbability:function(){this.calculate()},numberOfTrials:function(){this.calculate()},numberOfSuccess:function(){this.calculate()}},filters:{round:function(e){return void 0!=String(e).split(".")[1]&&String(e).split(".")[1].length>4?e.toFixed(5):e}},mounted:function(){this.calculate()},methods:{calculate:function(){this.verifyErrors();var e=function(e){for(var t=1;e>1;)t*=e--;return t};this.chartData.values=[],this.chartData.labels=[],this.binomialProbabilities={equal:0,greater:0,less:0,lessOrEqual:0,greaterOrEqual:0};for(var t=0;t<=this.numberOfTrials;t++){var i=e(this.numberOfTrials)/(e(t)*e(this.numberOfTrials-t)),n=i*Math.pow(this.eventProbability,t)*Math.pow(1-this.eventProbability,this.numberOfTrials-t);t<this.numberOfSuccess&&(this.binomialProbabilities.less+=n),t==this.numberOfSuccess&&(this.binomialProbabilities.equal=n),t>this.numberOfSuccess&&(this.binomialProbabilities.greater+=n),this.chartData.labels.push(t),this.chartData.values.push(n)}this.binomialProbabilities.greaterOrEqual=this.binomialProbabilities.equal+this.binomialProbabilities.greater,this.binomialProbabilities.lessOrEqual=this.binomialProbabilities.equal+this.binomialProbabilities.less},verifyErrors:function(){var e=["eventProbability","numberOfTrials","numberOfSuccess"];this.errors.clear(),e.forEach(function(e){this[e]<0&&this.errors.set(e,"This value cannot be negative"),(Number.isNaN(parseFloat(this[e]))||""==String(this[e]).trim())&&this.errors.set(e,"This must be a number")},this),this.eventProbability>1?this.errors.set("eventProbability","The probability must be a number between 0 and 1"):this.errors.clear("eventProbability"),parseFloat(this.numberOfSuccess)>parseFloat(this.numberOfTrials)?this.errors.set("numberOfSuccess","The number of success can not be greater than the number of trials"):this.errors.clear("numberOfSuccess")},reset:function(){this.eventProbability=.3,this.numberOfTrials=100,this.numberOfSuccess=35,this.binomialProbabilities={equal:0,greater:0,less:0,lessOrEqual:0,greaterOrEqual:0},this.errors.calculate()}}}),Vue.component("chart-vue",{template:"<canvas></canvas>",props:{labels:{},values:{},title:{},line:{},color:{default:"rgba(220, 220, 220, .2)"},type:{default:"line"},beforeTooltips:{default:"Probability of getting"},beginAtZero:{default:!0}},data:function(){return{chart:0}},watch:{values:function(){this.chart&&this.chart.destroy(),this.render()},line:function(){this.chart&&this.chart.destroy(),this.render()}},methods:{render:function(){var e=this,t={labels:this.labels,datasets:[{label:this.title,data:this.values,backgroundColor:"rgba(54, 162, 235, .2)",borderColor:"rgba(54, 162, 235, 1)",borderWidth:1}]},i={title:{display:!0,text:this.title,fontSize:20},legend:{display:!1},label:{enabled:!1},tooltips:{displayColors:!1,callbacks:{label:function(e,t){return e.yLabel},title:function(t,i){return e.beforeTooltips+" "+t[0].xLabel}}},scales:{yAxes:[{ticks:{beginAtZero:this.beginAtZero}}]}};this.chart=new Chart(this.$el.getContext("2d"),{type:this.type,data:t,options:i,lineAtIndex:this.line})}},mounted:function(){var e={renderVerticalLine:function(e,t){var i=e.chart.ctx,n=e.scales["y-axis-0"],s=e.scales["x-axis-0"],a=s.getPixelForValue(void 0,t-1);i.beginPath(),i.strokeStyle="#ff0000",i.moveTo(a,n.top),i.lineTo(a,n.bottom),i.stroke(),i.fillStyle="#ff0000",i.textAlign="center",i.font="12px Georgia",i.fillText("Expected value",a,n.top)},afterDatasetsDraw:function(e,t){var i=this;e.config.lineAtIndex&&e.config.lineAtIndex.forEach(function(t){return i.renderVerticalLine(e,t)})}};Chart.plugins.register(e),this.render()}}),Vue.component("expected-value",{template:'\n        <section class="section">\n            <div class="columns is-desktop">\n                <div class="column has-text-centered" >\n                    <h2 class="title is-size-5 has-text-weight-bold">Events probabilities</h2>\n                    \n                    <div class="field" v-for="(event, index) in events">\n                        <div class="field-body">\n                            <div class="field is-grouped">\n                                <p class="control is-expanded">\n                                    <label class="label">Event({{index + 1}})</label>\n                                </p>\n\n                                <p class="control is-expanded">\n                                    <input class="input" type="text" placeholder="Value" v-model.number="event.value">\n                                </p>\n\n                                <p class="control is-expanded">\n                                    <input class="input" type="text" placeholder="Probability" v-model.number="event.probability">\n                                </p>\n\n                                <p class="control is-expanded">\n                                    <button class="button" @click="remove(index)">\n                                        <span class="icon is-small has-text-grey-dark">\n                                            <i class="fa fa-times" aria-hidden="true"></i>\n                                        </span>\n                                    </button>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class="field is-grouped is-grouped-right">\n                        <div class="field-label is-normal control">\n                            <label class="label control has-text-right">\n                                Add more\n                            </label>\n                        </div>\n                        <p class="control">\n                            <button class="button" @click="add">\n                                <span class="icon is-small has-text-info">\n                                    <i class="fa fa-plus" aria-hidden="true"></i>\n                                </span>\n                            </button>\n                        </p>\n                    </div>\n                    <div class="field">\n                        Expected value: {{expectedValue}}\n                    </div>\n                    <div class="field has-text-danger" v-if="errorProbability">\n                        The sum of probabilities must be equal to 1\n                    </div>\n                </div>\n\n                <div class="column">\n                    <div class="content">\n                        <chart-vue :labels="labels" :values="values" :line="[expectedValue]" title="Probability Mass Function" type="bar"></chart-vue>\n                    </div>\n                </div>\n            </div>\n        </section>\n    ',data:function(){return{events:[{value:1,probability:.4},{value:2,probability:.3},{value:3,probability:.1},{value:4,probability:.2}]}},computed:{labels:function(){return this.events.map(function(e){return e.value})},values:function(){return this.events.map(function(e){return e.probability})},expectedValue:function(){return this.events.reduce(function(e,t){return e+t.value*t.probability},0)},errorProbability:function(){return 1!=this.events.reduce(function(e,t){return e+t.probability},0)}},methods:{add:function(){this.events.push({value:"",probability:""}),this.$nextTick(function(){var e=document.querySelectorAll('input[placeholder="Value"]');e[e.length-1].focus()})},remove:function(e){this.events.splice(e,1)}}});